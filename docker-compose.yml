version: "3"
services:
  docs:
    container_name: docs
    image: nginx
    ports:
      - "80:80"
    volumes:
      - "./nginx/html:/usr/share/nginx/html:ro"

  master:
    container_name: master
    image: arjones/pyspark:2.4.5
    restart: always
    command: ["/opt/spark/sbin/start-master.sh"]
    environment:
      MASTER: spark://master:7077
      SPARK_NO_DAEMONIZE: 1
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    volumes:
      - ./scripts:/app
  worker1:
    container_name: worker1
    image: arjones/pyspark:2.4.5
    restart: always
    command: ["/opt/spark/sbin/start-slave.sh", "spark://master:7077", "--memory", "512m", "--cores", "2"]
    environment:
      MASTER: spark://master:7077
      SPARK_NO_DAEMONIZE: 1
    depends_on:
      - master
    ports:
      - 4041:4040
      - "6066"
      - "7077"
      - 8081:8080
    volumes:
      - ./scripts:/app
  worker2:
    container_name: worker2
    image: arjones/pyspark:2.4.5
    restart: always
    command: ["/opt/spark/sbin/start-slave.sh", "spark://master:7077", "--memory", "512m", "--cores", "2"]
    environment:
      MASTER: spark://master:7077
      SPARK_NO_DAEMONIZE: 1
    depends_on:
      - master
    ports:
      - 4042:4040
      - "6066"
      - "7077"
      - 8082:8080
    volumes:
      - ./scripts:/app

  kafka:
    container_name: kafka
    image: spotify/kafka
    restart: always
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092

  postgres:
    container_name: postgres
    image: postgres:11
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: workshop
      POSTGRES_USER: workshop
      POSTGRES_PASSWORD: w0rkzh0p
    ports:
      - "5431:5431"

  superset:
    container_name: superset
    image: amancevice/superset
    restart: always
    depends_on:
      - redis
      - postgres
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY}
      SUPERSET_HOME: /etc/superset
    ports:
      - "8088:8088"
    volumes:
      - ./superset/conf/superset_config.py:/etc/superset/superset_config.py
      - superset:/var/lib/superset
  redis:
    container_name: redis
    image: redis
    restart: always

volumes:
  postgres-data:
  superset:
